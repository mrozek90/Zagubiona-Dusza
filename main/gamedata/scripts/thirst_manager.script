-- Файл: thirst_manager
-- Назначение: Имитация жажды у Главного Героя и использование армейской фляги
--------------------------------------------------------------------------------
--------------------------Скрипты: makdm, 2015 для COP 1.6.0.2. и Смерти Вопреки
--------------------------------------------------------------------------------

local Thirst_manager = nil

function get_thirst_manager()
	if( Thirst_manager == nil ) then
		Thirst_manager = Thirst_hud_mgr()
	end
	return Thirst_manager
end

class "Thirst_hud_mgr"
function Thirst_hud_mgr:__init()
	self.show_thirst_hud = true
	self.last_timer_thirst = nil
	self.actor_sleep = false
	self.max_actor_power = 1
	self.hud = get_hud()
end
---------Этот метод вызывается из bind_stalker.script постоянно
function Thirst_hud_mgr:update()
	
	self.actor = db.actor
        local hud_str = get_console():
        get_string("hud_draw")
	
	if self.show_thirst_hud == false or self.actor:alive() == false or has_alife_info("actor_in_level_changer") or bind_stalker.travel_func ~= nil or has_alife_info("sleep_active") or self.actor:is_talking() or hud_str == "off" then
		self:clear_customstatic()
		return
	end

	if self.last_timer_thirst == nil then
		self.last_timer_thirst = game.get_game_time()
	end
	
	if has_alife_info( "sleep_active" ) then
		if self.max_actor_power > 0.42 then
			self.max_actor_power = 0.42
		end
	self.actor_sleep = true
	return
	end
	
	if self.actor_sleep == true then
		self.actor_sleep = false
		self.last_timer_thirst = game.get_game_time()
		return
	end
	
	if game.get_game_time():diffSec( self.last_timer_thirst ) >= 1200 then
	
		self.last_timer_thirst = game.get_game_time()
		self.max_actor_power = self.max_actor_power - 0.02
		
		if self.max_actor_power < 0.15 then
			self.max_actor_power = 0.15
		end
	end
	
	if self.actor.power <= self.max_actor_power then
		return
	else
		self.actor.power = self.max_actor_power - self.actor.power
	end
	
	self:update_customstatic()

end

---------Этот метод вызывается из bind_stalker.script при использовании предмета ГГ из рюкзака
function Thirst_hud_mgr:use_item( section )

--Проверяем - пьём ли мы воду

	local new_section = nil
	
	if section == "flask" then
		new_section = "flask2"
	elseif section == "flask2" then
		new_section = "flask3"
	elseif section == "flask3" then
		new_section = "flask_empty"
	end
	
--Если пили воду, то меняем флягу в инвентаре

	if new_section ~= nil then
	--	self.hud:HideActorMenu()
		alife():create( new_section, vector(), 0, 0, self.actor:id() )
	end
	
--в зависимости от выпитого и съеденного меняем жажду ГГ

	local ini = system_ini()
	local eat_thirst_param = utils.cfg_get_number( ini, section, "eat_thirst", nil, false, 0 )
	self.max_actor_power = self.max_actor_power + eat_thirst_param
	if self.max_actor_power > 1 then
		self.max_actor_power = 1
	elseif self.max_actor_power < 0.15 then
		self.max_actor_power = 0.15
	end
	self:update_customstatic()

end

function Thirst_hud_mgr:update_customstatic()

	if self.max_actor_power >= 0.85  then
		self:clear_customstatic()
		return
	end
	
	if self.max_actor_power < 0.85 and self.max_actor_power >= 0.7 and
		self.hud:GetCustomStatic( "first_thirst" ) == nil then
		self:clear_customstatic()
		self.hud:AddCustomStatic( "first_thirst", true )
	elseif self.max_actor_power < 0.7 and self.max_actor_power >= 0.41 and
		self.hud:GetCustomStatic( "second_thirst" ) == nil then
		self:clear_customstatic()
		self.hud:AddCustomStatic( "second_thirst", true )
	elseif self.max_actor_power < 0.41 and self.max_actor_power >= 0.31 and
		self.hud:GetCustomStatic( "third_thirst" ) == nil then
		self:clear_customstatic()
		self.hud:AddCustomStatic( "third_thirst", true )
	elseif self.max_actor_power < 0.31 and self.hud:GetCustomStatic( "fourth_thirst" ) == nil then
		self:clear_customstatic()
		self.hud:AddCustomStatic( "fourth_thirst", true )
	end

end

function Thirst_hud_mgr:clear_customstatic()

	if self.hud:GetCustomStatic("first_thirst") ~= nil then
		self.hud:RemoveCustomStatic("first_thirst")
		return
	end
	if self.hud:GetCustomStatic("second_thirst") ~= nil then
		self.hud:RemoveCustomStatic("second_thirst")
		return
	end
	if self.hud:GetCustomStatic("third_thirst") ~= nil then
		self.hud:RemoveCustomStatic("third_thirst")
		return
	end
	if self.hud:GetCustomStatic("fourth_thirst") ~= nil then
		self.hud:RemoveCustomStatic("fourth_thirst")
	end
	
end
-----------------------------Эти методы вызываются из xr_effects.script при кат-сценах
function Thirst_hud_mgr:disable_ui()
	if self.show_thirst_hud == true then
		self.show_thirst_hud = false
	end
end

function Thirst_hud_mgr:enable_ui()
	if self.show_thirst_hud == false then
		self.show_thirst_hud = true
	end
end
-----------------------------Эти методы вызываются из bind_stalker.script при сохранении/загрузке игры
function Thirst_hud_mgr:save( packet )
	set_save_marker( packet, "save", false, "Th_manager" )
	if self.last_timer_thirst == nil then
		packet:w_bool( false )
	else
		packet:w_bool( true )
		utils.w_CTime( packet, self.last_timer_thirst )
	end
	packet:w_float( self.max_actor_power )
	set_save_marker( packet, "save", true, "Th_manager" )
end

function Thirst_hud_mgr:load( reader )
	set_save_marker( reader, "load", false, "Th_manager" )
		local stored_timer_thirst = reader:r_bool()
		if stored_timer_thirst == true then
			self.last_timer_thirst = utils.r_CTime( reader )
		end
		self.max_actor_power = reader:r_float()
	set_save_marker( reader, "load", true, "Th_manager" )
end
