--[[ ---------------------------------------------
 File       : mod_function.script
 Description: Служебные функции мода на базе SGM 1.7
 Author     : denis2000#sigerous.ru
-------------------------------------------------]]

--Чтения предустановленной суммы денег у НПС
function ReadCorpseMoney(section)
--ltx - массив системных переменных
local ltx = system_ini()
	--Если в секции (section) прописана переменная corpse_money, то считать ее и выдать в результаты работы функции
   if ltx:line_exist(section,"corpse_money") then
      return ltx:r_float(section,"corpse_money")
   else
      return 0
   end
end

--Спальный мешок. Случайное время сна. От.
function GetSleepBagRandomMIN(section)
   local ltx = system_ini()
   local value = ltx:r_float(section,"random_sleep_min")
   return value
end

--Спальный мешок. Случайное время сна. До.
function GetSleepBagRandomMAX(section)
   local ltx = system_ini()
   local value = ltx:r_float(section,"random_sleep_max")
   return value
end

--Название предмета.
function ReadCaption(section)
   local ltx = system_ini()
   local value = ltx:r_string(section,"inv_name")
   return value
end

--Чтение pstor переменной.
function read_variable(params_name)
    return pstor_retrieve(db.actor,params_name)
end

--Запись pstor переменной.
function write_variable(params_name,value)
   if value==nil then
       clear_variable(params_name)
   else
       pstor_store(db.actor,params_name,value)
   end
end

--Удаление pstor переменной.
function clear_variable(params_name)
   if db.storage[db.actor:id()].pstor[params_name] then
       db.storage[db.actor:id()].pstor[params_name]=nil
   end
end

--Логическая функция наличия инфопорции Есть->true, Нет->false
function info_get_boolean(info)
   if info~=nil then
      if db.actor:has_info(info) then
         result=true
      else
         result=false
      end
   end
   return result
end

--Функция выдачи или отбора инфопорции в зависимости от состояния соответствующей логической переменной
function info_give_on_boolean(value,info)
   if value~=nil and info~=nil then
      if value==true then
         if not db.actor:has_info(info) then
            db.actor:give_info_portion(info)
         end
      else
         if db.actor:has_info(info) then
            db.actor:disable_info_portion(info)
         end
      end
   end
end

--Установка pstor переменной в хранилище переменных
function pstor_store(obj,varname,val)
   if obj==nil then return nil end
   local sub_id=obj:id()
   if db.storage[sub_id].pstor==nil then
      db.storage[sub_id].pstor={}
   end
   db.storage[sub_id].pstor[varname]=val
end

--Извлечение pstor переменной из хранилища переменных
function pstor_retrieve(obj,varname)
   if obj==nil then return nil end
   local sub_id=obj:id()
   if db.storage[sub_id].pstor~=nil then
      local val=db.storage[sub_id].pstor[varname]
      if val~=nil then
         return val
      end
   end
   return nil
end

--Установка взрывчатки
function create_explosive_on_level(who,x,y,z,lv,gv,spot_name,spot_descr)
	obj=alife():create(who,vector():set(x,y,z),lv,gv)
	if obj then
		write_variable("remote_charge_id",obj.id)
		if spot_name~=nil and spot_descr~=nil then
			add_spot_on_map(obj.id,spot_name,spot_descr)
		end
	end
	return obj
end

--Детонация взрывоопасного предмета, по ID.
function detonate_explosive(obj_id)
	if obj_id~=nil and level.object_by_id(obj_id)~=nil then
		level.object_by_id(obj_id):explode(0)
	end
end